extends layout

block content
    .row.justify-content-center
        .col-md-6
            .card
                .card-header
                    i.icon-people 
                    | Benutzerkonto
                .card-body
                    form(method='POST', action='/users/edit/'+_id, id='Form')
                        .form-group
                            .input-group.mb-3
                                span.input-group-addon ID
                                input.form-control(type='text', value=_id, name='id', readonly='readonly')
                                span.input-group-addon
                                    i.fa.fa-id-card-o
                        .form-group
                            .input-group.mb-3
                                span.input-group-addon Benutzer
                                input.form-control(type='text', value=username, name='username')
                                span.input-group-addon
                                    i.icon-user
                        .form-group
                            .input-group.mb-3
                                span.input-group-addon Vorname
                                input.form-control(type='text', value=firstname, name='firstname')
                                span.input-group-addon
                                    i.icon-user
                        .form-group
                            .input-group.mb-3
                                span.input-group-addon Alter
                                input.form-control(type='text', value=age, name='age')
                                span.input-group-addon
                                    i.fa.fa-heart-o
                        .form-group
                            .input-group.mb-3
                                span.input-group-addon E-Mail
                                input.form-control(type='text', value=email, name='email')
                                span.input-group-addon @
                        .form-group
                            .input-group.mb-3
                                span.input-group-addon Passwort
                                input.form-control(type='password', value='', name='password')
                                span.input-group-addon
                                    i.icon-lock
                        .form-group
                            .input-group.mb-3
                                span.input-group-addon Passwort wiederholen
                                input.form-control(type='password', value='', name='password2')
                                span.input-group-addon
                                    i.icon-lock
                        .form-group
                            .input-group.mb-3
                                span.input-group-addon Bild auswählen
                                input.form-control(type='text', value=picture, name="picture", readonly='readonly')
                                span.input-group-addon
                                    i.fa.fa-photo
                        a.change-picture(href='#')
                            each acc_pic_url, index in acc_pic_urls
                                img(id=index, src=acc_pic_url).img-thumbnail
                        p 
                            small Standardmäßig hast du ein Bild-Platzhalter. Wenn du EVE Accounts eingetragen hast kannst du auswählen welches Bild deiner Charaktere du angezeigt bekommen möchtest.
                        button.btn.btn-block.btn-success(type='submit') Benutzerkonto Speichern

    // initialize input fields to reset is-invalid class and refill submitted values
    script(type='text/javascript').
        $(document).ready(function () {
            // Add validation class formatting to the form fields
            function validateRegisterForm(errors){
                for (error of errors){
                    $('input[name=' + error.param + ']').addClass('is-invalid');
                    $('input[name=' + error.param + ']').closest('.input-group').after('<div class="invalid-feedback d-flex">' + error.msg + '</div><br>');
                    $('input[name=' + error.param + ']').val(error.value);
                    // Password is always red as it must be retyped always because of hash calculation
                    $('input[name=password]').addClass('is-invalid');
                    $('input[name=password]').val('');
                    $('input[name=password2]').addClass('is-invalid');
                    $('input[name=password2]').val('');
                }
            }
            
            // Do the validation
            function userEditValidate(){
                var val_errors = !{form_errors ? JSON.stringify(form_errors) : "undefined"};
                val_errors && validateRegisterForm(val_errors);
                var val_username = !{username ? JSON.stringify(username) : "undefined"};
                val_username && $('input[name=username]').val(val_username);
                var val_firstname = !{firstname ? JSON.stringify(firstname) : "undefined"};
                val_firstname && $('input[name=firstname]').val(val_firstname);
                var val_email = !{email ? JSON.stringify(email) : "undefined"};
                val_email && $('input[name=email]').val(val_email);
                var val_age = !{age ? JSON.stringify(age) : "undefined"};
                val_age && $('input[name=age]').val(val_age);
                var val_picture = !{picture ? JSON.stringify(picture) : "undefined"};
                val_picture && $('input[name=picture]').val(val_picture);    
            }
            
            // Form Error Validation      
            userEditValidate();

            // put initial border on configured picture
            img_urls = [];
            $('.img-thumbnail').each(function(){
                img_urls.push($(this).attr('src'));
            });
            for (var x in img_urls){
                if (img_urls[x] == "#{picture}"){
                    $('#'+x+'.img-thumbnail').addClass('border border-primary');
                }
            }
         
        });